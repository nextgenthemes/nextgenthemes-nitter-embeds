name: test-deploy
on: [push, pull_request]

jobs:
  test:
    if: >-
      startsWith(github.ref, 'refs/tags')
      || contains(github.event.head_commit.message, '[ci]')
    name: PHP Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '7.2', '7.3', '7.4', '8.0', '8.1', '8.2'  ] # https://www.php.net/supported-versions
        wordpress: [ 'latest' ] # https://wordpress.org/download/releases/
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: dbpass
          MYSQL_DATABASE: dbname
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Websites
        uses: actions/checkout@v3
        with:
          repository: nextgenthemes/websites
          ref: master
          path: .
          token: ${{ secrets.REPO_TOKEN }}

      - name: rm -rf symbiosistheme.com
        run: rm -rf symbiosistheme.com

      - name: Checkout Nitter Plugin
        uses: actions/checkout@v3
        with:
          path: symbiosistheme.com/web/app/plugins/nextgenthemes-nitter-embeds
          token: ${{ secrets.REPO_TOKEN }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@d30ad8b1843ace22e6698ab99bbafaa747b6bd0d # 2.24.0 # https://github.com/shivammathur/setup-php/releases/
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, dom, zip, mysql, gd
          tools:  phpunit-polyfills
          coverage: none #optional

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Install WP Tests
        run: bash ./bin/install-wp-tests.sh dbname root dbpass "127.0.0.1:$DB_PORT" ${{ matrix.wordpress }} true
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run PHPUnit without code coverage
        run: phpunit --testsuite nitter

  deploy:
    if: >-
      startsWith(github.ref, 'refs/tags')
      && ! startsWith(github.event.repository.name, 'arve-')
      && ! contains(github.ref, 'alpha')
    needs: test
    name: SVN commit to wp.org
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Checkout ARVE to use action
        uses: actions/checkout@v3
        with:
          repository: nextgenthemes/advanced-responsive-video-embedder
          ref: master
          path: arve
          token: ${{ secrets.REPO_TOKEN }}
      
      - name: Deploy
        uses: ./arve/actions/wp-plugin-deploy
        with:
          version: ${{ steps.get_version.outputs.VERSION }}
          svn_user: ${{ secrets.SVN_USERNAME }}
          svn_pass: ${{ secrets.SVN_PASSWORD }}

